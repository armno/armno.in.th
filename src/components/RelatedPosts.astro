---
import { Frontmatter } from "@shared/frontmatter.interface";
import { intersection, sampleSize } from "lodash-es";
import PostItem from "@components/PostItem.astro";

const allPosts = await Astro.glob<Frontmatter>("../pages/blog/**/*.mdx");
const { tags, currentPathname } = Astro.props;

const allRelatedPosts = allPosts
  .filter(({ url }) => !currentPathname.includes(url))
  // sort posts by most recent first
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).valueOf() -
      new Date(a.frontmatter.pubDate).valueOf()
  )
  // filter to posts with only matched tags with the current post
  .filter((post) => {
    const matchedTags = intersection(tags, post.frontmatter.tags);
    return matchedTags.length > 0;
  });

const relatedPosts = sampleSize(allRelatedPosts, 3, null);
---

{
  relatedPosts.length > 0 && (
    <section class="mt-20 not-prose">
      <h4 class="text-sm text-slate-600 uppercase tracking-widest font-bold mb-4">
        Related posts
      </h4>
      <ul class="grid grid-cols-3 gap-x-8">
        {relatedPosts.map((post) => (
          <PostItem
            url={post.url}
            pubDate={post.frontmatter.pubDate}
            title={post.frontmatter.title}
            thumbnail={post.frontmatter.thumbnail}
          />
        ))}
      </ul>
    </section>
  )
}
