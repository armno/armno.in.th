---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import { format } from "date-fns";

const content = {
  title: "Tags",
  description: "tags",
  thumbnail: "",
  language: "en",
};

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const sortedPosts = allPosts.sort((a, b) => {
    return (
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    );
  });

  const uniqueTags = [...new Set(sortedPosts.map((post) => post.data.tags).flat())]
    .filter((tag) => !!tag)
    .map((tag) => tag!.toLowerCase());

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>{
      return post.data.tags?.map((tag) => tag.toLowerCase())
        .includes(tag);
    });

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<PageLayout frontmatter={content} isPost={false} hasSearch={true}>
  <h1>Posts tagged with &ldquo;{tag}&rdquo;</h1>
  <ol class="list-none p-0 mt-16">
    {
      posts.map((post) => (
        <li class="p-0 flex gap-3 lg:items-baseline">
          <time
            class="font-mono text-xs text-slate-600 dark:text-slate-400 leading-6 lg:leading-loose"
            datetime={post.data.pubDate.toString()}
          >
            {format(new Date(post.data.pubDate), "dd.MM.yyyy")}
          </time>
          <a href={"/blog/" + post.id}>{post.data.title}</a>
        </li>
      ))
    }
  </ol>
</PageLayout>
