---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import { format } from "date-fns";
import SearchBox from "@components/SearchBox.astro";

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("blog");
  const sortedPosts = allPosts.sort((a, b) => {
    return (
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    );
  });

  const postsByYear = sortedPosts.reduce((acc, post) => {
    const year = new Date(post.data.pubDate).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {});

  const postsByYearArray = Object.keys(postsByYear)
    .reverse()
    .map((year) => {
      return {
        year,
        posts: postsByYear[year],
      };
    });

  return paginate(postsByYearArray, { pageSize: 1000 });
}

const { page } = Astro.props;
const content = {
  title: "Blog",
  description: "Blog",
  thumbnail: "",
  language: "en",
};
---

<PageLayout frontmatter={content}>
  <h1 class="font-bold">Blog</h1>
  <SearchBox />

  <ol class="list-none p-0">
    {
      page.data.map((year) => (
        <li>
          <h2 class="font-bold">{year.year}</h2>
          <ol class="list-none p-0">
            {year.posts.map((post) => (
              <li class="p-0 flex gap-3 lg:items-baseline">
                <time
                  class="font-mono text-xs text-slate-600 dark:text-slate-400 leading-6 lg:leading-loose"
                  datetime={post.data.pubDate.toString()}
                >
                  {format(new Date(post.data.pubDate), "dd.MM.yyyy")}
                </time>
                <a href={"/blog/" + post.slug}>{post.data.title}</a>
              </li>
            ))}
          </ol>
        </li>
      ))
    }
  </ol>
</PageLayout>
